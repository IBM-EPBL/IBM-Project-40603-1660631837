# -*- coding: utf-8 -*-
"""Ashika.2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mR28AgU9n_98Vv1TCAvevGXIMI_suQZL
"""

import numpy as np
import pandas as pd

df = pd.read_csv("/content/Churn_Modelling (1).csv")
df

3.Visualizations

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

i)Univariate Analysis

df[['CustomerId','Surname','CreditScore','Geography','Age','Tenure']].describe()

import seaborn as sns
sns.histplot(df.Age,kde=True)

import seaborn as sns
sns.countplot(df.Gender)

ii)Bivariate Analysis

df[['CustomerId','Surname','CreditScore','Geography','Gender','Age']].corr()

import matplotlib.pyplot as plt
sns.scatterplot(df.CreditScore,df.Age)
plt.ylim(0,100)

iii)Multivariate Analysis

import seaborn as sns
sns.pairplot(data =df[['CustomerId','Geography','Gender','CreditScore','Age','Balance']],hue = 'Balance')

4.Descripte Statistics

df['Age'].mode()

df["Age"].mean()

round(df["Age"].mean(),5)

df["Age"].median()

df.columns

df["NumOfProducts"].value_counts()

df.dtypes

df.head()

df.describe()

5.Handling Missing values

df.isna().any()

df.isnull().sum()

df.isnull()

df.notnull()

6.Finding and replacing the outliers

import seaborn as sns
sns.boxplot(x=df['Age'])

sns.boxplot(x=df['Tenure'])

7.Check for categorial columns and perform encoding

import pandas as pd
df = pd.read_csv("/content/Churn_Modelling (1).csv",header=None)

cols = df.columns
num_cols = df._get_numeric_data().columns
num_cols

list(set(cols) - set(num_cols))

8.Split the data into dependent and independent variables

# x  -Independent
# y  -Dependent
df = pd.read_csv("/content/Churn_Modelling (1).csv")
x =df.drop('Exited',axis=1)
y=df['Exited']

x.head()

9.Scale the independent variables

from sklearn import linear_model
from sklearn.preprocessing import StandardScaler
scale = StandardScaler()

X = df[['Balance','Tenure']]
scaledX = scale.fit_transform(X)
print(scaledX)

10.Split the data into training and testing

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)
print('X Train Shape:{},Y.Train SHape:{}'.format(x_train.shape,y_train.shape))

print('X Test Shape :{},Y Test SHape:{}'.format(x_test.shape,y_test.shape))